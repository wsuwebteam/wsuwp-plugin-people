{"version":3,"file":"editor.js","mappings":"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,iEAAA,CAACwB,oFAAqB;IACpB3B,SAAS,EAAGA,SAAW;IACvBU,SAAS,EAAGkH,UAAU,CAAClH,SAAW;IAClC0D,YAAY,EAAGA;EAAc,CAC5B,CACD,CAAC;AAEP,CAAC;AAED,+DAAe0D,IAAI,EAAC;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjKA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://wsuwp-plugin-people/./assets/src/components/child-directory-add-editor/ChildDirectoryAddEditor.js","webpack://wsuwp-plugin-people/./assets/src/components/child-directory-card/ChildDirectoryCard.js","webpack://wsuwp-plugin-people/./assets/src/components/child-directory-editor/ChildDirectoryEditor.js","webpack://wsuwp-plugin-people/./assets/src/components/child-directory-list/ChildDirectoryList.js","webpack://wsuwp-plugin-people/./assets/src/components/components.js","webpack://wsuwp-plugin-people/./assets/src/components/people-add-editor-advanced/PeopleAddEditorAdvanced.js","webpack://wsuwp-plugin-people/./assets/src/components/people-add-editor/PeopleAddEditor.js","webpack://wsuwp-plugin-people/./assets/src/components/people-directory-editor/PeopleDirectoryEditor.js","webpack://wsuwp-plugin-people/./assets/src/components/people-list/PeopleList.js","webpack://wsuwp-plugin-people/./assets/src/components/person-card/PersonCard.js","webpack://wsuwp-plugin-people/./assets/src/components/person-search-result/PersonSearchResult.js","webpack://wsuwp-plugin-people/./assets/src/utilities/addDirectory.js","webpack://wsuwp-plugin-people/./assets/src/utilities/addIDs.js","webpack://wsuwp-plugin-people/./assets/src/utilities/deDupArray.js","webpack://wsuwp-plugin-people/./assets/src/utilities/directory.js","webpack://wsuwp-plugin-people/./assets/src/utilities/getChildDirectories.js","webpack://wsuwp-plugin-people/./assets/src/utilities/getPeopleIDsFromTaxonomy.js","webpack://wsuwp-plugin-people/./assets/src/utilities/getTaxonomies.js","webpack://wsuwp-plugin-people/./assets/src/utilities/getTaxonomyTerms.js","webpack://wsuwp-plugin-people/./assets/src/utilities/people.js","webpack://wsuwp-plugin-people/./assets/src/utilities/removeIDs.js","webpack://wsuwp-plugin-people/./assets/src/utilities/utilities.js","webpack://wsuwp-plugin-people/./blocks/wsu-directory/editor/block.js","webpack://wsuwp-plugin-people/./blocks/wsu-directory/editor/edit.js","webpack://wsuwp-plugin-people/external window [\"wp\",\"apiFetch\"]","webpack://wsuwp-plugin-people/external window [\"wp\",\"components\"]","webpack://wsuwp-plugin-people/external window [\"wp\",\"element\"]","webpack://wsuwp-plugin-people/external window [\"wp\",\"url\"]","webpack://wsuwp-plugin-people/webpack/bootstrap","webpack://wsuwp-plugin-people/webpack/runtime/compat get default export","webpack://wsuwp-plugin-people/webpack/runtime/define property getters","webpack://wsuwp-plugin-people/webpack/runtime/hasOwnProperty shorthand","webpack://wsuwp-plugin-people/webpack/runtime/make namespace object"],"sourcesContent":["import { useState } from '@wordpress/element';\r\nimport { addDirectory } from '../../utilities/utilities';\r\nimport { TextControl, Button } from '@wordpress/components';\r\n\r\n\r\nconst ChildDirectoryAddEditor = ( props ) => {\r\n\r\n    const [directoryName, setDirectoryName] = useState('');\r\n\r\n    let {\r\n        isEditing = false,\r\n        onAdd,\r\n        directory,\r\n    } = props;\r\n\r\n\r\n    const insertDirectory = () => {\r\n\r\n        addDirectory( directory.id, directoryName, onAdd )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <TextControl\r\n                    placeholder=\"Directory Name\"\r\n                    value={ directoryName }\r\n                    onChange={ (value) => { setDirectoryName( value ) }}\r\n                />\r\n                <Button\r\n                    onClick={ () => { insertDirectory() } }\r\n                    >Add Directory</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChildDirectoryAddEditor;","import { TextControl, Button } from '@wordpress/components';\r\n\r\nconst ChildDirectoryCard = ( props ) => {\r\n\r\n    let {\r\n        title = '',\r\n        id = false,\r\n        peopleIDs = [],\r\n    } = props;\r\n\r\n    return (\r\n        <div>{ title }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChildDirectoryCard;","import React, { useState, useEffect } from \"@wordpress/element\";\r\n\r\nimport { getChildDirectories } from '../../utilities/utilities';\r\nimport {\r\n    ChildDirectoryList, \r\n    ChildDirectoryAddEditor \r\n} from \"../components\";\r\n\r\nconst ChildDirectoryEditor = ( props ) => {\r\n\r\n    let {\r\n        directory,\r\n        childDirectories,\r\n        setChildDirectories\r\n    } = props\r\n\r\n\r\n\r\n    const updateChildDirectories = () => {\r\n\r\n        getChildDirectories( directory.id, setChildDirectories );\r\n\r\n    }\r\n\r\n    useEffect( () => {\r\n\r\n        updateChildDirectories();\r\n        \r\n    }, [] );\r\n\r\n    console.log( childDirectories );\r\n\r\n    return (\r\n        <div className=\"wsu-cmp-child-directory-editor\">\r\n            <ChildDirectoryAddEditor  directory={directory} onAdd={ () => { updateChildDirectories() } } />\r\n            <ChildDirectoryList childDirectories={childDirectories} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ChildDirectoryEditor;","import { \r\n    ChildDirectoryCard\r\n} from \"../components\";\r\n\r\n\r\nconst ChildDirectoryList = ( props ) => {\r\n\r\n    let {\r\n        childDirectories,\r\n    } = props;\r\n\r\n    let peopleArray = Array.isArray( childDirectories ) ? childDirectories : [];\r\n\r\n\r\n    return (\r\n        <ul className=\"wsu-cmp-child-directory-list\">\r\n            { childDirectories.map( ( directory ) => { return( <ChildDirectoryCard {...directory} />) } )}\r\n        </ul>\r\n    );\r\n\r\n}\r\n\r\nexport default ChildDirectoryList;","export { default as PeopleDirectoryEditor } from './people-directory-editor/PeopleDirectoryEditor';\r\nexport { default as PeopleAddEditor } from './people-add-editor/PeopleAddEditor';\r\nexport { default as PeopleAddEditorAdvanced } from './people-add-editor-advanced/PeopleAddEditorAdvanced';\r\nexport { default as PersonCard } from './person-card/PersonCard';\r\nexport { default as PeopleList } from './people-list/PeopleList';\r\nexport { default as PersonSearchResult } from './person-search-result/PersonSearchResult';\r\nexport { default as ChildDirectoryEditor } from './child-directory-editor/ChildDirectoryEditor';\r\nexport { default as ChildDirectoryList } from './child-directory-list/ChildDirectoryList';\r\nexport { default as ChildDirectoryCard } from './child-directory-card/ChildDirectoryCard';\r\nexport { default as ChildDirectoryAddEditor } from './child-directory-add-editor/ChildDirectoryAddEditor';","import { TextControl, Button, SelectControl } from '@wordpress/components';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport { \r\n    getTaxonomies,\r\n    getTaxonomyTerms,\r\n    getPeopleIDsFromTaxonomy,\r\n} from '../../utilities/utilities';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PeopleAddEditorAdvanced = ( props ) => {\r\n\r\n    const [taxonomy, setTaxonomy]         = useState('');\r\n    const [taxonomyList, setTaxonomyList] = useState([]);\r\n    const [termList, setTermList]          = useState([]);\r\n    const [term, setTerm]                 = useState('');\r\n\r\n    let {\r\n        directory,\r\n        peopleIDs,\r\n        addPeopleIDs\r\n    } = props;\r\n\r\n    useEffect( () => {\r\n\r\n        getTaxonomies( setTaxonomyList );\r\n        \r\n    }, [] );\r\n\r\n    useEffect( () => {\r\n\r\n        getTaxonomyTerms( taxonomy, setTermList );\r\n        \r\n    }, [taxonomy] );\r\n\r\n    let defaultSelect = [ { label:'Select', value:''} ]\r\n\r\n    let taxonomyOptions = defaultSelect.concat( taxonomyList );\r\n    let termOptions = defaultSelect.concat( termList );\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            <SelectControl\r\n                label='Taxonomy'\r\n                value={ taxonomy }\r\n                options={ taxonomyOptions }\r\n                onChange={ ( value ) => setTaxonomy( value ) }\r\n            />\r\n            <SelectControl\r\n                label='Term'\r\n                value={ term }\r\n                options={ termOptions }\r\n                onChange={ ( value ) => { setTerm( value )} }\r\n            />\r\n                <Button\r\n                    onClick={ () => { getPeopleIDsFromTaxonomy( taxonomy, term, addPeopleIDs ) } }\r\n                    >Import People</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PeopleAddEditorAdvanced;","import { PersonSearchResult } from \"../components\";\r\nimport { TextControl, Button } from '@wordpress/components';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport { searchPeople } from \"../../utilities/people\";\r\nimport { PeopleAddEditorAdvanced } from '../components';\r\n\r\n\r\n\r\nconst PeopleAddEditor = ( props ) => {\r\n\r\n    const [personName, setPersonName]       = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    const clearResults = () => {\r\n        setSearchResults([]);\r\n        setPersonName('');\r\n    }\r\n\r\n    let {\r\n        directory,\r\n        peopleIDs,\r\n        addPeopleIDs\r\n    } = props;\r\n\r\n    const doSearch = () => {\r\n\r\n        if ( personName.length > 3 ) {\r\n\r\n            searchPeople( personName, setSearchResults )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let hasResults = Array.isArray( searchResults ) && searchResults.length ? true : false;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <TextControl\r\n                        placeholder=\"Search for People\"\r\n                        value={ personName }\r\n                        onChange={ (value) => { setPersonName( value ); doSearch() }}\r\n                    />\r\n                </div>\r\n                { hasResults && <ul>\r\n                    {searchResults.map( ( result ) => { return ( <PersonSearchResult {...result } addPerson={ (value) => { addPeopleIDs( [value] ); clearResults() } }  />) } ) }\r\n                </ul> }\r\n            </div>\r\n            <div>\r\n                <PeopleAddEditorAdvanced { ...props } />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PeopleAddEditor;","\r\nimport React, { useState, useEffect } from \"@wordpress/element\";\r\n\r\nimport { \r\n    PeopleAddEditor,\r\n    PeopleList\r\n} from \"../components\";\r\n\r\nimport { getPeople } from \"../../utilities/people\";\r\n\r\nimport { addIDs, removeIDs } from '../../utilities/utilities';\r\n\r\n\r\n\r\nconst PeopleDirectoryEditor = ( props ) => {\r\n\r\n    const [people, setPeople] = useState([]);\r\n\r\n    let {\r\n        directory,\r\n        peopleIDs,\r\n        setPeopleIDs,\r\n    } = props;\r\n\r\n    useEffect( () => {\r\n        getPeople( directory.id, peopleIDs, setPeople );\r\n        // get child directories and set them to childDirectories\r\n      }, [] );\r\n\r\n    const addPeopleIDs = ( newIDs ) => {\r\n        let updatedPeopleIDs = addIDs( peopleIDs, newIDs );\r\n        updatePeopleIDs( updatedPeopleIDs );\r\n    }\r\n\r\n    const removePeopleIDs = ( remIDs ) => {\r\n        let updatedPeopleIDs = removeIDs( peopleIDs, remIDs );\r\n        updatePeopleIDs( updatedPeopleIDs );  \r\n    }\r\n\r\n    const updatePeopleIDs = ( updatedPeopleIDs ) => {\r\n\r\n        setPeopleIDs( updatedPeopleIDs );\r\n        getPeople( directory.id, updatedPeopleIDs, setPeople );\r\n\r\n    } \r\n\r\n    return (\r\n        <div class=\"wsu-cmp-people-directory-editor\">\r\n            <PeopleAddEditor\r\n                addPeopleIDs={ addPeopleIDs }\r\n                />\r\n            <div>Hello World</div>\r\n            <PeopleList \r\n                people={ people }\r\n                removePeopleIDs={ removePeopleIDs }\r\n                />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PeopleDirectoryEditor;","import { \r\n    PersonCard\r\n} from \"../components\";\r\n\r\n\r\nconst PeopleList = ( props ) => {\r\n\r\n    let {\r\n        people,\r\n        removePeopleIDs,\r\n    } = props;\r\n\r\n    let peopleArray = Array.isArray( people ) ? people : [];\r\n\r\n\r\n    return (\r\n        <ul className=\"wsu-cmp-people-list\">\r\n            { people.map( ( person ) => { return( <PersonCard {...person} removePerson={ ( value ) => {removePeopleIDs( [value]) } } />) } )}\r\n        </ul>\r\n    );\r\n\r\n}\r\n\r\nexport default PeopleList;","import { TextControl, Button } from '@wordpress/components';\r\n\r\nconst PersonCard = ( props ) => {\r\n\r\n    let {\r\n        displayName = '',\r\n        id = false,\r\n        directoryID = false,\r\n        removePerson,\r\n    } = props;\r\n\r\n    return (\r\n        <div>{ displayName }\r\n            <Button onClick={ () => { removePerson( id ) } } >Remove</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PersonCard;","import { TextControl, Button } from '@wordpress/components';\r\n\r\nconst PersonSearchResult = ( props ) => {\r\n\r\n    let {\r\n        displayName = '',\r\n        id = false,\r\n        addPerson,\r\n    } = props;\r\n\r\n    return (\r\n        <li><Button onClick={ () => { addPerson( id ) } } >{ displayName }</Button></li>\r\n    );\r\n\r\n}\r\n\r\nexport default PersonSearchResult;","import apiFetch from \"@wordpress/api-fetch\";\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\nconst addDirectory = ( directoryID, directoryName, callback ) => {\r\n\r\n    let data = { directory_id:directoryID, title:directoryName }\r\n\r\n    apiFetch( { \r\n        path: addQueryArgs( '/directory/api/v1/add', data ) ,\r\n    }).then( ( response ) => {\r\n\r\n        callback( response.response );\r\n\r\n    });\r\n\r\n}\r\n\r\nexport default addDirectory;","import { deDupArray } from './utilities';\r\n\r\nconst addIDs = ( currentIDs, addIDs ) => {\r\n\r\n  let updatedPeopleIDs = deDupArray( currentIDs.concat( addIDs ) );\r\n\r\n  return updatedPeopleIDs;\r\n\r\n}\r\n\r\nexport default addIDs;","const deDupArray = ( array ) => {\r\n\r\n    console.log( array );\r\n\r\n    let uniqueArray = array.filter((c, index) => {\r\n        return array.indexOf(c) === index;\r\n    });\r\n\r\n    console.log( uniqueArray );\r\n\r\n    return uniqueArray;\r\n\r\n}\r\n\r\nexport default deDupArray;","\r\nconst getDirectory = () => {\r\n\r\n    let directory = {\r\n        directoryTitle: wp.data.select(\"core/editor\").getEditedPostAttribute( 'title' ),\r\n        editLink: false,\r\n        id: wp.data.select(\"core/editor\").getCurrentPostId(),\r\n    }\r\n\r\n    return directory;\r\n\r\n}\r\n\r\nconst getDirectoryPeopleIDs = ( directory ) => {\r\n\r\n    if ( 'peopleIDs' in directory ) {\r\n\r\n        if ( Array.isArray( directory.peopleIDs ) ) {\r\n\r\n            return directory.peopleIDs;\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    return [];\r\n\r\n}\r\n\r\nconst updateDirectoryPeople = ( directory, peopleIDs ) => {\r\n\r\n    if ( 'peopleIDs' in directory && Array.isArray( peopleIDs ) ) {\r\n\r\n        directory.peopleIDs = peopleIDs;\r\n\r\n    }\r\n\r\n    return directory;\r\n\r\n}\r\n\r\nconst updateChildDirectoriesMeta = ( childDirectories ) => {\r\n\r\n    let idString = Array.isArray( childDirectories ) ? childDirectories.join(',') : '';\r\n\r\n    wp.data.dispatch('core/editor').editPost({ meta: { wsu_child_directories: idString } });\r\n\r\n}\r\n\r\n\r\nexport { getDirectory, getDirectoryPeopleIDs, updateDirectoryPeople, updateChildDirectoriesMeta }","import apiFetch from \"@wordpress/api-fetch\";\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n\r\nconst getChildDirectories = ( directoryID, callback ) => {\r\n\r\n    let data = { \r\n        directory_id:directoryID, \r\n    }\r\n\r\n    apiFetch( { \r\n        path: addQueryArgs( '/directory/api/v1/children/get', data ) ,\r\n    }).then( ( response ) => {\r\n\r\n        callback( response.response );\r\n\r\n    });\r\n\r\n    return [];\r\n\r\n}\r\n\r\nexport default getChildDirectories;","import apiFetch from \"@wordpress/api-fetch\";\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n\r\nconst getPeopleIDsFromTaxonomy = ( taxonomy, term, callback ) => {\r\n\r\n    let data = { \r\n        taxonomy,\r\n        term,\r\n    }\r\n\r\n    apiFetch( { \r\n        path: addQueryArgs( '/directory/api/v1/editor/people_ids/taxonomy/get', data ) ,\r\n    }).then( ( response ) => {\r\n\r\n        callback( response.response );\r\n\r\n    });\r\n\r\n    return [];\r\n\r\n}\r\n\r\nexport default getPeopleIDsFromTaxonomy;","import apiFetch from \"@wordpress/api-fetch\";\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n\r\nconst getTaxonomies = ( callback ) => {\r\n\r\n    apiFetch( { \r\n        path: '/directory/api/v1/taxonomy/get',\r\n    }).then( ( response ) => {\r\n\r\n        callback( response.response );\r\n\r\n    });\r\n\r\n    return [];\r\n\r\n}\r\n\r\nexport default getTaxonomies;","import apiFetch from \"@wordpress/api-fetch\";\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n\r\nconst getTaxonomyTerms = ( taxonomy, callback ) => {\r\n\r\n    let data = { \r\n        taxonomy, \r\n    }\r\n\r\n    apiFetch( { \r\n        path: addQueryArgs( '/directory/api/v1/terms/get', data ) ,\r\n    }).then( ( response ) => {\r\n\r\n        callback( response.response );\r\n\r\n    });\r\n\r\n    return [];\r\n\r\n}\r\n\r\nexport default getTaxonomyTerms;","import apiFetch from \"@wordpress/api-fetch\";\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n\r\nconst getPeople = ( directoryID, peopleIDs, callback, fields = ['name'] ) => {\r\n\r\n    peopleIDs = Array.isArray( peopleIDs ) ? peopleIDs.join(',') : '';\r\n\r\n    let data = { \r\n        people_ids:peopleIDs, \r\n        directory:directoryID, \r\n        fields:fields.join(',') \r\n    }\r\n\r\n    apiFetch( { \r\n        path: addQueryArgs( '/directory/api/v1/people/get', data ) ,\r\n    }).then( ( response ) => {\r\n\r\n        callback( response.response );\r\n\r\n    });\r\n\r\n    return [];\r\n\r\n}\r\n\r\n\r\nconst searchPeople = ( term, callback ) => {\r\n\r\n    let data = { term }\r\n\r\n    apiFetch( { \r\n        path: addQueryArgs( '/directory/api/v1/people/search', data ) ,\r\n    }).then( ( response ) => {\r\n\r\n        callback( response.response );\r\n\r\n    });\r\n\r\n}\r\n\r\n/*const getPeopleIDs = () => {\r\n\r\n    let meta = wp.data.select('core/editor').getEditedPostAttribute('meta');\r\n    let peopleMeta = ( meta.hasOwnProperty('wsu_people') ) ? meta.wsu_people.split(',') : [];\r\n\r\n    var filtered = peopleMeta.filter(Boolean);\r\n\r\n    return filtered;\r\n\r\n}\r\n\r\nconst getPeopleFromDirectory = ( directory, callback) => {\r\n\r\n}\r\n\r\nconst getPeopleFromDirectories = ( directories, callback ) => {\r\n\r\n}*/\r\n\r\nconst updatePeopleMeta = ( peopleIDs ) => {\r\n\r\n    let idString = Array.isArray( peopleIDs ) ? peopleIDs.join(',') : '';\r\n\r\n    wp.data.dispatch('core/editor').editPost({ meta: { wsu_people: idString } });\r\n\r\n}\r\n\r\n\r\nexport { getPeople, updatePeopleMeta, searchPeople }\r\n","const removeIDs = ( currentIDs, removeIDs ) => {\r\n\r\n    let updatedIDs = currentIDs.filter( function( el ) {\r\n        return ! removeIDs.includes( el );\r\n      } );\r\n\r\n    return updatedIDs;\r\n\r\n}\r\n\r\nexport default removeIDs;","export { default as deDupArray } from './deDupArray';\r\nexport { default as addIDs } from './addIDs';\r\nexport { default as removeIDs } from './removeIDs';\r\nexport { default as getChildDirectories } from './getChildDirectories';\r\nexport { default as addDirectory } from './addDirectory';\r\nexport { default as getTaxonomies } from './getTaxonomies';\r\nexport { default as getTaxonomyTerms } from './getTaxonomyTerms';\r\nexport { default as getPeopleIDsFromTaxonomy } from './getPeopleIDsFromTaxonomy';","const { registerBlockType } = wp.blocks;\r\n\r\nimport Edit from \"./edit\";\r\n\r\nregisterBlockType(\"wsuwp/wsu-directory\", {\r\n  \ttitle: \"WSU Directory\",\r\n  \ticon: \"menu\",\r\n  \tapiVersion: 2,\r\n  \tcategory: \"text\",\r\n  \tattributes: {\r\n\t\tpeopleIDs: {\r\n\t  \t\ttype: \"array\",\r\n\t  \t\tdefault: [],\r\n\t\t},\r\n  \t},\r\n  \tedit: Edit, \r\n});","import React, { useState, useEffect } from \"@wordpress/element\";\r\n\r\nimport { \r\n  ChildDirectoryEditor, \r\n  PeopleDirectoryEditor \r\n} from '../../../assets/src/components/components';\r\n\r\nimport {\r\n  getPeople,\r\n  updatePeopleMeta,\r\n} from '../../../assets/src/utilities/people';\r\nimport {\r\n  getDirectory,\r\n  updateDirectoryPeople,\r\n  updateChildDirectoriesMeta,\r\n} from '../../../assets/src/utilities/directory';\r\n\r\nconst edit = (props) => {\r\n\r\n  let {\r\n\t\tclassName, \r\n\t\tisSelected, \r\n\t\tattributes, \r\n\t\tsetAttributes \r\n\t} = props;\r\n\r\n\r\n  // Set inital state of directory\r\n  const [directory, updateDirectory]               = useState( getDirectory() );\r\n  const [childDirectories, setChildDirectories] = useState([]);\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    // get people from people IDs and set them to people attributes.peopleIDs\r\n    // get child directories and set them to childDirectories\r\n    \r\n  }, [] );\r\n\r\n \r\n  /*useEffect( () => {\r\n    updateDirectory( updateDirectoryPeople( directory, peopleIDs ) );\r\n    updatePeopleMeta( peopleIDs );\r\n    setAttributes( { peopleIDs } );\r\n  }, [peopleIDs] );*/\r\n\r\n\r\n  /*const addPeople = ( profileIDs ) => {\r\n\r\n    let currentPeople = attributes.peopleIDs;\r\n\r\n    let updatedPeople = currentPeople.concat( profileIDs );\r\n\r\n    setPeople( updatedPeople );\r\n\r\n  }*/\r\n\r\n\r\n\r\n  const setPeopleIDs = ( profileIDs ) => {\r\n\r\n    setAttributes( { peopleIDs:profileIDs } );\r\n\r\n    updatePeopleMeta( profileIDs );\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <ChildDirectoryEditor\r\n      directory={ directory }\r\n      childDirectories={ childDirectories }\r\n      setChildDirectories={setChildDirectories}\r\n      />\r\n    <PeopleDirectoryEditor\r\n      directory={ directory }\r\n      peopleIDs={ attributes.peopleIDs }\r\n      setPeopleIDs={ setPeopleIDs }\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default edit;\r\n\r\n/*import React, { useState, useEffect } from \"@wordpress/element\";\r\nimport apiFetch from \"@wordpress/api-fetch\";\r\nimport { InnerBlocks, InspectorControls, useBlockProps, InspectorAdvancedControls, } from \"@wordpress/block-editor\";\r\nimport {\r\n  TextControl,\r\n  SelectControl,\r\n  BaseControl,\r\n  ToggleControl,\r\n  PanelBody,\r\n} from \"@wordpress/components\";\r\n\r\nimport DirectoryEditor from \"../../../assets/src/components/directory-editor/DirectoryEditor\";\r\nimport PeopleList from './components/people-list/PeopleList';\r\nimport getDirectories from \"../../../assets/src/utilities/getDirectories\";\r\nimport getDirectory from \"../../../assets/src/utilities/getDirectory\";\r\nimport PeopleEditor from \"../../../assets/src/components/people-editor/PeopleEditor\";\r\nimport { getDirectoryPeople, getChildDirectoryPeople } from \"../../../assets/src/utilities/directoryPeople\";\r\n\r\nimport \"./_style.scss\";\r\n\r\n\r\nconst edit = (props) => {\r\n\r\n  const { className, attributes, setAttributes } = props;\r\n\r\n  const [directory, setDirectory] = useState(false);\r\n  const [directories, setDirectories] = useState(false);\r\n\r\n  const blockProps = useBlockProps({\r\n    className: \"wsu-directory\",\r\n    style: {},\r\n  });\r\n\r\n  const post_id = wp.data.select(\"core/editor\").getCurrentPostId();\r\n\r\n  let postProps = {\r\n    post_id\r\n  }\r\n\r\n  let directoryProps = {\r\n    directories,\r\n    directory,\r\n  }\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        getDirectories( post_id, setDirectories );\r\n        getDirectory( post_id, setDirectory );\r\n\r\n    }, [] );\r\n\r\n  return (\r\n    <>\r\n      <InspectorControls>\r\n        <PanelBody title=\"General\" initialOpen={true}>\r\n        </PanelBody>\r\n      </InspectorControls>\r\n      <InspectorAdvancedControls>\r\n\t</InspectorAdvancedControls>\r\n      <div {...blockProps}>\r\n        <DirectoryEditor\r\n            {...postProps}\r\n            {...directoryProps}\r\n            setDirectories={ ( directories ) => { setDirectories( directories ) } } \r\n            />\r\n        <PeopleEditor \r\n            {...postProps}\r\n            {...directoryProps}\r\n            onChange={ () => { getDirectory( post_id, setDirectory ) } }\r\n            />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default edit;*/\r\n","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["useState","addDirectory","TextControl","Button","ChildDirectoryAddEditor","props","directoryName","setDirectoryName","isEditing","onAdd","directory","insertDirectory","id","createElement","placeholder","value","onChange","onClick","ChildDirectoryCard","title","peopleIDs","React","useEffect","getChildDirectories","ChildDirectoryList","ChildDirectoryEditor","childDirectories","setChildDirectories","updateChildDirectories","console","log","className","peopleArray","Array","isArray","map","default","PeopleDirectoryEditor","PeopleAddEditor","PeopleAddEditorAdvanced","PersonCard","PeopleList","PersonSearchResult","SelectControl","getTaxonomies","getTaxonomyTerms","getPeopleIDsFromTaxonomy","taxonomy","setTaxonomy","taxonomyList","setTaxonomyList","termList","setTermList","term","setTerm","addPeopleIDs","defaultSelect","label","taxonomyOptions","concat","termOptions","options","searchPeople","personName","setPersonName","searchResults","setSearchResults","clearResults","doSearch","length","hasResults","result","addPerson","getPeople","addIDs","removeIDs","people","setPeople","setPeopleIDs","newIDs","updatedPeopleIDs","updatePeopleIDs","removePeopleIDs","remIDs","class","person","removePerson","displayName","directoryID","apiFetch","addQueryArgs","callback","data","directory_id","path","then","response","deDupArray","currentIDs","array","uniqueArray","filter","c","index","indexOf","getDirectory","directoryTitle","wp","select","getEditedPostAttribute","editLink","getCurrentPostId","getDirectoryPeopleIDs","updateDirectoryPeople","updateChildDirectoriesMeta","idString","join","dispatch","editPost","meta","wsu_child_directories","fields","people_ids","updatePeopleMeta","wsu_people","updatedIDs","el","includes","registerBlockType","blocks","Edit","icon","apiVersion","category","attributes","type","edit","isSelected","setAttributes","updateDirectory","profileIDs","Fragment"],"sourceRoot":""}